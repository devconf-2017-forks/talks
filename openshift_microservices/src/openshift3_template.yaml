kind: Template
apiVersion: v1
metadata:
  name: openshift-microservices
  annotations:
    description: This example shows how to create application containing multiple micoroservices in openshift origin v3
    iconClass: icon-python
labels:
  template: openshift-microservices-template
objects:
  #
  # blast-image build configuration
  #
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: blast-image
      labels:
        name: blast-image
    spec:
      triggers:
        - type: GitHub
          github:
            secret: secret101
        - type: Generic
          generic:
            secret: secret101
        - type: ImageChange
        - type: ConfigChange
      source:
        type: Git
        git:
          uri: https://github.com/soltysh/talks.git
          contextDir: openshift_microservices/src/blast-image
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: python:latest
            namespace: openshift
      output:
        to:
          kind: ImageStreamTag
          name: blast-image:latest
  #
  # blast-image image stream configuration
  #
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: blast-image
  #
  # blast-image deployment configuration
  #
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: blast-image
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - blast-image
            from:
              kind: ImageStreamTag
              name: blast-image:latest
        - type: ConfigChange
      replicas: 1
      selector:
        name: blast-image
      template:
        metadata:
          labels:
            name: blast-image
        spec:
          containers:
            - name: blast-image
              image: blast-image
              ports:
                - containerPort: 8080
                  protocol: TCP
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
  #
  # blast-image service configuration
  #
  - kind: Service
    apiVersion: v1
    metadata:
      name: blast-image
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        name: blast-image
  #
  # blast-image backend deployment configuration
  #
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: blast-image-db
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ConfigChange
      replicas: 1
      selector:
        name: blast-image-db
      template:
        metadata:
          labels:
            name: blast-image-db
        spec:
          containers:
            - name: blast-image-db
              image: openshift/postgresql-92-centos7:latest
              ports:
                - containerPort: 5432
                  protocol: TCP
              env:
                - name: POSTGRESQL_USER
                  value: "${POSTGRESQL_USER}"
                - name: POSTGRESQL_PASSWORD
                  value: "${POSTGRESQL_PASSWORD}"
                - name: POSTGRESQL_DATABASE
                  value: blast_image
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
  #
  # blast-image backend service configuration
  #
  - kind: Service
    apiVersion: v1
    metadata:
      name: blast-image-db
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 5432
          targetPort: 5432
      selector:
        name: blast-image-db
  #
  # blast-text build configuration
  #
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: blast-text
      labels:
        name: blast-text
    spec:
      triggers:
        - type: GitHub
          github:
            secret: secret101
        - type: Generic
          generic:
            secret: secret101
        - type: ImageChange
        - type: ConfigChange
      source:
        type: Git
        git:
          uri: https://github.com/soltysh/talks.git
          contextDir: openshift_microservices/src/blast-text
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: python:latest
            namespace: openshift
      output:
        to:
          kind: ImageStreamTag
          name: blast-text:latest
  #
  # blast-text image stream configuration
  #
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: blast-text
  #
  # blast-text deployment configuration
  #
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: blast-text
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - blast-text
            from:
              kind: ImageStreamTag
              name: blast-text:latest
        - type: ConfigChange
      replicas: 1
      selector:
        name: blast-text
      template:
        metadata:
          labels:
            name: blast-text
        spec:
          containers:
            - name: blast-text
              image: blast-text
              ports:
                - containerPort: 8080
                  protocol: TCP
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
  #
  # blast-text service configuration
  #
  - kind: Service
    apiVersion: v1
    metadata:
      name: blast-text
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        name: blast-text
  #
  # blast-text backend deployment configuration
  #
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: blast-text-db
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ConfigChange
      replicas: 1
      selector:
        name: blast-text-db
      template:
        metadata:
          labels:
            name: blast-text-db
        spec:
          containers:
            - name: blast-text-db
              image: openshift/mongodb-24-centos7:latest
              ports:
                - containerPort: 27017
                  protocol: TCP
              env:
                - name: MONGODB_USER
                  value: "${MONGODB_USER}"
                - name: MONGODB_PASSWORD
                  value: "${MONGODB_PASSWORD}"
                - name: MONGODB_DATABASE
                  value: blast_text
                - name: MONGODB_ADMIN
                  value: "${MONGODB_ADMIN}"
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
  #
  # blast-text backend service configuration
  #
  - kind: Service
    apiVersion: v1
    metadata:
      name: blast-text-db
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 27017
          targetPort: 27017
      selector:
        name: blast-text-db
  #
  # blast-video build configuration
  #
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: blast-video
      labels:
        name: blast-video
    spec:
      triggers:
        - type: GitHub
          github:
            secret: secret101
        - type: Generic
          generic:
            secret: secret101
        - type: ImageChange
        - type: ConfigChange
      source:
        type: Git
        git:
          uri: https://github.com/soltysh/talks.git
          contextDir: openshift_microservices/src/blast-video
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: python:latest
            namespace: openshift
      output:
        to:
          kind: ImageStreamTag
          name: blast-video:latest
  #
  # blast-video image stream configuration
  #
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: blast-video
  #
  # blast-video deployment configuration
  #
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: blast-video
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - blast-video
            from:
              kind: ImageStreamTag
              name: blast-video:latest
        - type: ConfigChange
      replicas: 1
      selector:
        name: blast-video
      template:
        metadata:
          labels:
            name: blast-video
        spec:
          containers:
            - name: blast-video
              image: blast-video
              ports:
                - containerPort: 8080
                  protocol: TCP
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
  #
  # blast-video service configuration
  #
  - kind: Service
    apiVersion: v1
    metadata:
      name: blast-video
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        name: blast-video
  #
  # blast-video backend deployment configuration
  #
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: blast-video-db
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ConfigChange
      replicas: 1
      selector:
        name: blast-video-db
      template:
        metadata:
          labels:
            name: blast-video-db
        spec:
          containers:
            - name: blast-video-db
              image: redis:latest
              ports:
                - containerPort: 6379
                  protocol: TCP
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
  #
  # blast-video backend service configuration
  #
  - kind: Service
    apiVersion: v1
    metadata:
      name: blast-video-db
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 6379
          targetPort: 6379
      selector:
        name: blast-video-db
  #
  # blast-ui build configuration
  #
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: blast-ui
      labels:
        name: blast-ui
    spec:
      triggers:
        - type: GitHub
          github:
            secret: secret101
        - type: Generic
          generic:
            secret: secret101
        - type: ImageChange
        - type: ConfigChange
      source:
        type: Git
        git:
          uri: https://github.com/soltysh/talks.git
          contextDir: openshift_microservices/src/blast-ui
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: DockerImage
            name: soltysh/lighttpd-centos7
            namespace: openshift
      output:
        to:
          kind: ImageStreamTag
          name: blast-ui:latest
  #
  # blast-ui image stream configuration
  #
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: blast-ui
  #
  # blast-ui deployment configuration
  #
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: blast-ui
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - blast-ui
            from:
              kind: ImageStreamTag
              name: blast-ui:latest
        - type: ConfigChange
      replicas: 1
      selector:
        name: blast-ui
      template:
        metadata:
          labels:
            name: blast-ui
        spec:
          containers:
            - name: blast-ui
              image: blast-ui
              ports:
                - containerPort: 8080
                  protocol: TCP
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
  #
  # blast-video service configuration
  #
  - kind: Service
    apiVersion: v1
    metadata:
      name: blast-ui
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        name: blast-video
parameters:
  - name: POSTGRESQL_USER
    description: postgresql database username
    generate: expression
    from: "user[A-Z0-9]{4}"
    required: true
  - name: POSTGRESQL_PASSWORD
    description: posgresql database password
    generate: expression
    from: "[A-Z0-9]{9}"
    required: true
  - name: MONGODB_USER
    description: mongodb database username
    generate: expression
    from: "user[A-Z0-9]{4}"
    required: true
  - name: MONGODB_PASSWORD
    description: mongodb database password
    generate: expression
    from: "[A-Z0-9]{9}"
    required: true
  - name: MONGODB_ADMIN
    description: mongodb database admin
    generate: expression
    from: "admin[A-Z0-9]{4}"
    required: true
